package selfcompile

import (
	"bytes"
	"testing"
)

func TestPlugin(t *testing.T) {
	p := plugin{
		Package: "mypackage",
		Imports: []string{
			"github.com/foo/bar/baz",
			"github.com/abra/cadabra",
		},
	}

	buf := bytes.Buffer{}
	_, err := p.WriteTo(&buf)
	if err != nil {
		t.Errorf("unexpected error: %v", err)
	}

	want := `// Generated by go-selfcompile.
package mypackage

import _ "github.com/foo/bar/baz"
import _ "github.com/abra/cadabra"
`
	if got := buf.String(); got != want {
		t.Errorf("got\n  %q\nwant\n  %q", got, want)
	}
}

func TestPluginNoPackage(t *testing.T) {
	p := plugin{
		Imports: []string{
			"github.com/foo/bar/baz",
		},
	}

	buf := bytes.Buffer{}
	_, err := p.WriteTo(&buf)
	if err != nil {
		t.Errorf("unexpected error: %v", err)
	}

	want := `// Generated by go-selfcompile.
package main

import _ "github.com/foo/bar/baz"
`
	if got := buf.String(); got != want {
		t.Errorf("got\n  %q\nwant\n  %q", got, want)
	}
}
